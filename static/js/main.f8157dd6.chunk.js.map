{"version":3,"sources":["components/Navbar.js","components/Textform.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlfor","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","trim","length","defaultProps","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f8157dd6.chunk.js","sourcesContent":["import React from 'react'\nimport propTypes from 'prop-types'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/\">About</a>\n        </li>\n        \n        \n      </ul>\n      {/* <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n      </form> */}\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n    </div>\n  </div> \n</nav>\n  )\n}\n\nNavbar.propTypes={\n    title:propTypes.string,\n\n}\nNavbar.defaultProps={\n    title:\"set title here\"\n}","import React,{useState} from 'react'\n\nexport default function Textform(props) {\n    const [text,setText]=useState('');\n    const handleUpClick=()=>{\n       // console.log(\"Uppercase was clicked!\"+ text)\n        let newText=text.toUpperCase()\n        setText(newText)\n        props.showAlert(\"Converted to upper case\",\"success\");\n    }\n    const handleOnChange=(event)=>{\n        console.log(\"Onchange!\")\n        setText(event.target.value)\n    }\n    const handleLoClick=()=>{\n        // console.log(\"Uppercase was clicked!\"+ text)\n         let newText=text.toLowerCase()\n         setText(newText)\n         props.showAlert(\"Converted to lower case\",\"success\");\n     }\n     const handleClearClick=()=>{\n        // console.log(\"Uppercase was clicked!\"+ text)\n         let newText=\"\"\n         setText(newText)\n         props.showAlert(\"Cleared\",\"success\");\n     }\n\n     const handleCopy=()=>{\n        var text=document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"copied to clipboard\",\"success\")\n\n     }\n     const extraspaces=()=>{\n        let newtext=text.split(/[ ]+/);\n        setText(newtext.join(\" \"));\n     }\n\n\n  return (\n    <>\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\n        <h1>{props.heading}</h1>\n    <div className=\"mb-3\">\n    \n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"6\"></textarea>\n    </div>\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\n    <button className=\"btn btn-primary mx-2\" onClick={extraspaces}>Remove extraspaces</button>\n    \n    </div>\n\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\n        <h2>Your text summary </h2>\n        <p> Your text has {text.trim().length===0?0:text.split(\" \").length} words and {text.length} characters</p>\n        <p> {0.008*text.split(\" \").length} minutes read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:'Enter text to preview'}</p>\n    </div>\n\n    </>\n  \n  )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n  return (\n    \n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n    {props.alert.type}: {props.alert.msg}\n  \n      \n    </div>\n  )\n}\n\nexport default Alert\n","//import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React,{useState} from 'react'\nimport Alert from './Alert'\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode,setMode]=useState('light')\n  const [alert,setAlert]=useState(null)\n\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(()=>{\n      setAlert(null)\n    },3000)\n\n  }\n\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743'\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode has been enabled\",\"success\")\n    }\n  }\n\n  return (\n    <>\n    <Navbar title=\"Textutils2\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}\n\n    />\n    <div className=\"container my-3\">\n     <Textform heading=\"Enter text here\" showAlert={showAlert} mode={mode}/> \n    {/* <About/> */}\n    </div>\n    \n    </>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}